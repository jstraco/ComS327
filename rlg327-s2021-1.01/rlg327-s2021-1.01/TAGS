
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,2469
# define rand_under(16,339
# define rand_range(20,482
# define UNUSED(21,555
#define malloc(23,586
typedef struct corridor_path 29,730
  heap_node_t *hn;hn30,761
  uint8_t pos[pos31,780
  uint8_t from[from32,798
  int32_t cost;33,817
} corridor_path_t;34,833
typedef enum dim 36,853
  dim_x,37,872
  dim_y,38,881
  num_dims39,890
} dim_t;40,901
typedef int16_t pair_t[pair_t42,911
#define DUNGEON_X 44,946
#define DUNGEON_Y 45,980
#define MIN_ROOMS 46,1014
#define MAX_ROOMS 47,1047
#define ROOM_MIN_X 48,1081
#define ROOM_MIN_Y 49,1114
#define ROOM_MAX_X 50,1147
#define ROOM_MAX_Y 51,1181
#define MAX_STAIRS 52,1215
#define mappair(54,1250
#define mapxy(55,1307
#define hardnesspair(56,1342
#define hardnessxy(57,1409
typedef enum __attribute__ ((__packed__)) terrain_type 59,1455
  ter_debug,60,1512
  ter_wall,61,1525
  ter_wall_immutable,62,1537
  ter_floor,63,1559
  ter_floor_room,64,1572
  ter_floor_hall,65,1590
  ter_stairs,66,1608
  ter_stairs_up,67,1622
  ter_stairs_down,68,1639
  ter_player69,1658
} terrain_type_t;70,1671
typedef struct room 72,1690
  pair_t position;73,1712
  pair_t size;74,1731
} room_t;75,1746
typedef struct dungeon 77,1757
  uint32_t num_rooms;78,1782
  room_t rooms[rooms79,1804
  terrain_type_t map[map80,1831
  pair_t stairsUp[stairsUp81,1875
  pair_t stairsDown[stairsDown82,1906
  pair_t pc;91,2548
  uint8_t hardness[hardness92,2561
  uint8_t num_stairs_up;93,2603
  uint8_t num_stairs_down;94,2628
} dungeon_t;95,2655
static uint32_t in_room(97,2669
static uint32_t adjacent_to_room(113,3060
static uint32_t is_open_space(121,3321
static int32_t corridor_path_cmp(126,3420
static void dijkstra_corridor(130,3570
static void dijkstra_corridor_inv(229,7307
#define hardnesspair_inv(282,8629
static int connect_two_rooms(332,11300
static int create_cycle(351,11952
static int connect_rooms(393,13517
int gaussian[gaussian406,13710
typedef struct queue_node 414,13866
  int x,415,13894
  int x, y;415,13894
  struct queue_node *next;next416,13906
} queue_node_t;417,13933
static int smooth_hardness(419,13950
static int empty_dungeon(573,18124
static int place_rooms(592,18500
static void place_stairs(629,19687
static int make_rooms(664,20884
int gen_dungeon(688,21432
void render_dungeon(701,21594
void delete_dungeon(740,22405
void init_dungeon(744,22444
void load_dungeon(750,22531
void save_dungeon(837,24668
int main(902,26639
