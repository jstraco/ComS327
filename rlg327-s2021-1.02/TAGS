
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,3307
#define DUMP_HARDNESS_IMAGES 15,245
# define rand_under(19,390
# define rand_range(23,533
# define UNUSED(24,606
#define malloc(26,637
typedef struct corridor_path 32,781
  heap_node_t *hn;hn33,812
  uint8_t pos[pos34,831
  uint8_t from[from35,849
  int32_t cost;36,868
} corridor_path_t;37,884
typedef enum dim 39,904
  dim_x,40,923
  dim_y,41,932
  num_dims42,941
} dim_t;43,952
typedef int8_t pair_t[pair_t45,962
#define DUNGEON_X 47,996
#define DUNGEON_Y 48,1030
#define MIN_ROOMS 49,1064
#define MAX_ROOMS 50,1097
#define ROOM_MIN_X 51,1131
#define ROOM_MIN_Y 52,1164
#define ROOM_MAX_X 53,1197
#define ROOM_MAX_Y 54,1231
#define SAVE_DIR 55,1265
#define DUNGEON_SAVE_FILE 56,1306
#define DUNGEON_SAVE_SEMANTIC 57,1347
#define DUNGEON_SAVE_VERSION 58,1393
#define INFINITY 59,1427
#define mappair(61,1470
#define mapxy(62,1527
#define hardnesspair(63,1562
#define hardnessxy(64,1629
typedef enum __attribute__ ((__packed__)) terrain_type 66,1675
  ter_debug,67,1732
  ter_wall,68,1745
  ter_wall_immutable,69,1757
  ter_floor,70,1779
  ter_floor_room,71,1792
  ter_floor_hall,72,1810
  ter_stairs,73,1828
  ter_stairs_up,74,1842
  ter_stairs_down75,1859
} terrain_type_t;76,1877
typedef struct room 78,1896
  pair_t position;79,1918
  pair_t size;80,1937
} room_t;81,1952
typedef struct playerCharecter 83,1963
  dim_t position;84,1996
} playerCharecter_t;85,2014
typedef struct dungeon 87,2036
  uint16_t num_rooms;88,2061
  room_t *rooms;rooms89,2083
  terrain_type_t map[map90,2100
  uint8_t hardness[hardness99,2753
  int distance[distance100,2795
  int distance2[distance2101,2833
  pair_t pc;102,2904
} dungeon_t;103,2917
static uint32_t in_room(105,2931
static uint32_t adjacent_to_room(121,3322
static uint32_t is_open_space(129,3583
static int32_t corridor_path_cmp(134,3682
static void dijkstra_corridor(138,3832
static void dijkstra_corridor_inv(237,7569
#define hardnesspair_inv(290,8891
static int connect_two_rooms(340,11562
static int create_cycle(359,12214
static int connect_rooms(401,13779
int gaussian[gaussian414,13972
typedef struct queue_node 422,14128
  int x,423,14156
  int x, y;423,14156
  struct queue_node *next;next424,14168
} queue_node_t;425,14195
static int smooth_hardness(427,14212
static int empty_dungeon(586,18483
static int place_rooms(605,18859
static void place_stairs(642,20046
static int make_rooms(664,20681
int gen_dungeon(687,21244
void render_dungeon(700,21406
void delete_dungeon(740,22332
void init_dungeon(745,22389
int write_dungeon_map(750,22446
int write_rooms(763,22675
uint16_t count_up_stairs(785,23147
uint16_t count_down_stairs(801,23398
int write_stairs(817,23653
uint32_t calculate_dungeon_size(849,24408
int makedirectory(860,24879
int write_dungeon(895,25515
int read_dungeon_map(961,27052
int read_stairs(984,27650
int read_rooms(1007,28127
int read_dungeon(1065,30053
int read_pgm(1146,31912
void usage(1231,34315
typedef struct path 1241,34525
  heap_node_t *hn;hn1242,34547
  uint8_t pos[pos1243,34566
} path_t;1244,34584
int pathThroughWalls(1248,34709
static dungeon_t *dungeon;dungeon1252,34748
static int32_t dist_cmp(1253,34775
int pathThroughDungeon(1269,35588
int printPaths(1415,40938
int main(1429,41198
